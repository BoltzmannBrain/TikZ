import math
import numpy as np
import matplotlib.pyplot as plot


ranks = {2: [1, 1, 1], 5: [1], 6: [1], 8: [1, 1, 1, None, 1], 9: [1], 10: [1], 11: [1, 1, 1], 12: [1], 13: [1], 14: [1, None], 16: [None]}
pixelDistance = {2: [0.0, 0.0, 0.0], 5: [0.0], 6: [0.0], 8: [0.0, 0.0, 0.0, None, 0.0], 9: [0.0], 10: [0.0], 11: [0.0, 0.0, 0.0], 12: [0.0], 13: [0.0], 14: [0.0, None], 16: [0.0]}
programDistance = {2: [0, 0, 0], 5: [0], 6: [0], 8: [0, 0, 0, None, 0], 9: [0], 10: [0], 11: [0, 0, 0], 12: [0], 13: [0], 14: [0, None], 16: [4]}
time = {2: [1.3699109554290771, 1.374894142150879, 1.407456874847412], 5: [2.8588850498199463], 6: [3.167409896850586], 8: [4.214593172073364, 4.1398820877075195, 3.9178988933563232, 4.481384038925171, 4.515053987503052], 9: [5.036211967468262], 10: [5.1828789710998535], 11: [5.7576820850372314, 5.6303980350494385, 5.837996959686279], 12: [5.782374858856201], 13: [6.670562982559204], 14: [7.55016016960144, 6.7986061573028564], 16: [9.460416078567505]}

xs = range(1,17)

def standardError(l):
    d = np.array(l) - average(l)
    d = d*d
    variance = d.sum()/len(l)
    deviation = math.sqrt(variance)
    return deviation/math.sqrt(len(l))

def average(l):
    return np.array(l).sum()/float(len(l))

def plotAverages(d,f):
    y = [average(d[x]) for x in xs ]
    e = [standardError(d[x]) for x in xs ]
    plot.errorbar(xs,e,fmt = f,yerr = e)

plotAverages({1: [0, 0, 0, 0, 0, 0, 0, 0], 2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 4: [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 5: [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 6: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
              , 7: [0, 3, 0, 0, 0, 0, 0, 0], 8: [0, 0, 5, 0, 0, 4, 0, 0, 0], 9: [0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0], 10: [2, 0, 5, 0, 0, 0, 0, 0, 0], 11: [0, 6, 0, 4, 3, 0, 0, 0, 2, 0, 0, 0, 2, 3, 0], 12: [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 8, 3, 0, 0], 13: [0, 0, 0, 0, 4, 0, 0, 5, 0, 0
                                                                                                                                                                                                                                                               , 0, 0, 2, 0], 14: [0, 2, 0, 8, 0, 2, 0, 3, 0, 0, 0, 0, 0, 7, 0], 15: [0, 1, 7, 0, 2, 0, 0, 0, 0, 0, 8, 0], 16: [0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0]}, 'r')

plot.xlabel('# objects')
plot.ylabel('Average program edit distance')
plot.legend(['SMC+NN (100 particles)'])
plot.show()
